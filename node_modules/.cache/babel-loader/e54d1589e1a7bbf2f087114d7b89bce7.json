{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashke\\\\Documents\\\\Projects\\\\03_reserve_field_with_map\\\\use-mapbox-gl-js-with-react\\\\src\\\\MapGL.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapGL = _ref => {\n  _s();\n\n  let {\n    fields\n  } = _ref;\n  const mapContainer = useRef(null);\n  const [lng, setLng] = useState(34.7838);\n  const [lat, setLat] = useState(32.0711);\n  const [zoom, setZoom] = useState(12.10);\n  const mapGl = useRef(null);\n  const [marker, setMarker] = useState([,]);\n  useEffect(() => {\n    if (mapGl.current) return; // initialize map only once\n\n    mapGl.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    if (Array.isArray(fields)) {\n      fields.map(field => new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current));\n    } else {\n      new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current);\n      setLng({\n        lng: fields.coordinates[1]\n      });\n      setLat({\n        lat: fields.coordinates[0]\n      });\n      mapGl.current({\n        center: [fields.coordinates[1], fields.coordinates[0]]\n      });\n    }\n  });\n  useEffect(() => {\n    if (!mapGl.current) return; // wait for map to initialize\n\n    mapGl.current.on('move', () => {\n      setLng(mapGl.current.getCenter().lng.toFixed(4));\n      setLat(mapGl.current.getCenter().lat.toFixed(4));\n      setZoom(mapGl.current.getZoom().toFixed(2));\n    });\n  }); // attempt to add hover over location for description\n  // Create a popup, but don't add it to the map yet.\n  // const popup = new mapboxgl.Popup({\n  //     closeButton: false,\n  //     closeOnClick: false\n  // });\n  // mapGl.on('mouseenter', 'places', (e) => {\n  // Change the cursor style as a UI indicator.\n  // mapGl.getCanvas().style.cursor = 'pointer';\n  //     // Copy coordinates array.\n  //     const coordinates = e.features[0].geometry.coordinates.slice();\n  //     // Ensure that if the map is zoomed out such that multiple\n  //     // copies of the feature are visible, the popup appears\n  //     // over the copy being pointed to.\n  //     while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n  //         coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n  //     }\n  //     // Populate the popup and set its coordinates\n  //     // based on the feature found.\n  //     popup.setLngLat(coordinates).addTo(mapGl);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"mapgl\", {\n    className: \"mapGl\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapGL, \"VzZN6juF+XdxJLjdsz+hpi4oGo8=\");\n\n_c = MapGL;\nexport default MapGL;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapGL\");","map":{"version":3,"sources":["C:/Users/ashke/Documents/Projects/03_reserve_field_with_map/use-mapbox-gl-js-with-react/src/MapGL.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapGL","fields","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","mapGl","marker","setMarker","current","Map","container","style","center","Array","isArray","map","field","Marker","setLngLat","coordinates","addTo","on","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst MapGL = ({fields}) => {\r\n\r\n    const mapContainer = useRef(null);\r\n    const [lng, setLng] = useState(34.7838);\r\n    const [lat, setLat] = useState(32.0711);\r\n    const [zoom, setZoom] = useState(12.10);\r\n    const mapGl = useRef(null);\r\n    const [marker, setMarker] = useState([,])\r\n\r\n    useEffect(() => {\r\n        if (mapGl.current) return; // initialize map only once\r\n        mapGl.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        if (Array.isArray(fields)) {\r\n            fields.map((field) =>\r\n                new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current)\r\n            );\r\n        } else {\r\n            new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current)\r\n            setLng({ lng: fields.coordinates[1] })\r\n            setLat({ lat: fields.coordinates[0] })\r\n            mapGl.current({\r\n                center: [fields.coordinates[1], fields.coordinates[0]]\r\n            })\r\n        }\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!mapGl.current) return; // wait for map to initialize\r\n        mapGl.current.on('move', () => {\r\n            setLng(mapGl.current.getCenter().lng.toFixed(4));\r\n            setLat(mapGl.current.getCenter().lat.toFixed(4));\r\n            setZoom(mapGl.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n\r\n// attempt to add hover over location for description\r\n    // Create a popup, but don't add it to the map yet.\r\n    // const popup = new mapboxgl.Popup({\r\n    //     closeButton: false,\r\n    //     closeOnClick: false\r\n    // });\r\n\r\n    // mapGl.on('mouseenter', 'places', (e) => {\r\n        // Change the cursor style as a UI indicator.\r\n        // mapGl.getCanvas().style.cursor = 'pointer';\r\n\r\n    //     // Copy coordinates array.\r\n    //     const coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n    //     // Ensure that if the map is zoomed out such that multiple\r\n    //     // copies of the feature are visible, the popup appears\r\n    //     // over the copy being pointed to.\r\n    //     while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n    //         coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n    //     }\r\n\r\n    //     // Populate the popup and set its coordinates\r\n    //     // based on the feature found.\r\n    //     popup.setLngLat(coordinates).addTo(mapGl);\r\n    // });\r\n\r\n\r\n    return ( \r\n        <mapgl className=\"mapGl\">\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </mapgl>\r\n     );\r\n}\r\n \r\nexport default MapGL;\r\n"]},"metadata":{},"sourceType":"module"}