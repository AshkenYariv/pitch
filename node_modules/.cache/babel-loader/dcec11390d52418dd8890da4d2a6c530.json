{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashke\\\\Documents\\\\Projects\\\\03_reserve_field_with_map\\\\use-mapbox-gl-js-with-react\\\\src\\\\MapGL.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapGL = _ref => {\n  _s();\n\n  let {\n    fields\n  } = _ref;\n  const mapContainer = useRef(null);\n  const [lng, setLng] = useState(34.7838);\n  const [lat, setLat] = useState(32.0711);\n  const [zoom, setZoom] = useState(12.10);\n  const mapGl = useRef(null);\n  useEffect(() => {});\n  useEffect(() => {\n    // function to set center of map to a spacific field - currenly doesn't work\n    if (Array.isArray(fields)) {\n      console.log(\"In (if):\"); // logs for debugging\n    } else {\n      console.log(\"In (else):\"); // logs for debugging\n\n      console.log(\"Initial lat = \" + lat); // logs for debugging\n\n      setLng(fields.coordinates[1]);\n      lat = fields.coordinates[1];\n      setLat(fields.coordinates[0]);\n      lng = fields.coordinates[0];\n      console.log(\"After setLat lat = \" + lat); // logs for debugging\n    }\n\n    if (mapGl.current) return; // initialize map only once\n\n    mapGl.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    if (Array.isArray(fields)) {\n      fields.map(field => new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current));\n    } else {\n      new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current);\n      setLng({\n        lng: fields.coordinates[1]\n      });\n      setLat({\n        lat: fields.coordinates[0]\n      });\n    }\n  });\n  useEffect(() => {\n    if (!mapGl.current) return; // wait for map to initialize\n\n    mapGl.current.on('move', () => {\n      setLng(mapGl.current.getCenter().lng.toFixed(4));\n      setLat(mapGl.current.getCenter().lat.toFixed(4));\n      setZoom(mapGl.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"mapgl\", {\n    className: \"mapGl\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapGL, \"l9HQzBSxQRcAzGbtJt1IVSUBYVg=\");\n\n_c = MapGL;\nexport default MapGL;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapGL\");","map":{"version":3,"sources":["C:/Users/ashke/Documents/Projects/03_reserve_field_with_map/use-mapbox-gl-js-with-react/src/MapGL.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapGL","fields","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","mapGl","Array","isArray","console","log","coordinates","current","Map","container","style","center","map","field","Marker","setLngLat","addTo","on","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst MapGL = ({fields}) => {\r\n\r\n    const mapContainer = useRef(null)\r\n    const [lng, setLng] = useState(34.7838)\r\n    const [lat, setLat] = useState(32.0711)\r\n    const [zoom, setZoom] = useState(12.10)\r\n    const mapGl = useRef(null)\r\n\r\n    useEffect(() => {\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        // function to set center of map to a spacific field - currenly doesn't work\r\n        if (Array.isArray(fields)) {\r\n            console.log(\"In (if):\") // logs for debugging\r\n        } else {\r\n            console.log(\"In (else):\") // logs for debugging\r\n            console.log(\"Initial lat = \" + lat) // logs for debugging\r\n            setLng(fields.coordinates[1])\r\n            lat = fields.coordinates[1]\r\n            setLat(fields.coordinates[0])\r\n            lng = fields.coordinates[0]\r\n            console.log(\"After setLat lat = \" + lat) // logs for debugging\r\n        }\r\n\r\n        if (mapGl.current) return; // initialize map only once\r\n        mapGl.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        if (Array.isArray(fields)) {\r\n            fields.map((field) =>\r\n                new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current)\r\n            );\r\n        } else {\r\n            new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current)\r\n            setLng({ lng: fields.coordinates[1] })\r\n            setLat({ lat: fields.coordinates[0] })\r\n        }\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!mapGl.current) return; // wait for map to initialize\r\n        mapGl.current.on('move', () => {\r\n            setLng(mapGl.current.getCenter().lng.toFixed(4));\r\n            setLat(mapGl.current.getCenter().lat.toFixed(4));\r\n            setZoom(mapGl.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n\r\n    return ( \r\n        <mapgl className=\"mapGl\">\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </mapgl>\r\n     );\r\n}\r\n \r\nexport default MapGL;\r\n"]},"metadata":{},"sourceType":"module"}