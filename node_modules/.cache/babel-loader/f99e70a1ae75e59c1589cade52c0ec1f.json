{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashke\\\\Documents\\\\Projects\\\\03_reserve_field_with_map\\\\use-mapbox-gl-js-with-react\\\\src\\\\MapGL.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapGL = _ref => {\n  _s();\n\n  let {\n    fields\n  } = _ref;\n  const mapContainer = useRef(null);\n  const [lng, setLng] = useState(34.7838);\n  const [lat, setLat] = useState(32.0711);\n  const [zoom, setZoom] = useState(12.10);\n  const mapGl = useRef(null);\n  const isHomePage = false;\n  useEffect(() => {\n    if (Array.isArray(fields)) {\n      isHomePage = true;\n    } else {\n      isHomePage = false;\n    }\n  });\n  useEffect(() => {\n    if (mapGl.current) return; // initialize map only once\n    // this is overly complicated! Loads diffrent maps according to if \n    // wanting to center in a single location or in a general location\n\n    if (isHomePage) {\n      mapGl.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n      });\n    } else {\n      mapGl.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [fields.coordinates[0], fields.coordinates[1]],\n        zoom: zoom\n      });\n    }\n\n    if (Array.isArray(fields)) {\n      fields.map(field => new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current));\n    } else {\n      new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current);\n      setLng({\n        lng: fields.coordinates[1]\n      });\n      setLat({\n        lat: fields.coordinates[0]\n      });\n    }\n  });\n  useEffect(() => {\n    if (!mapGl.current) return; // wait for map to initialize\n\n    mapGl.current.on('move', () => {\n      setLng(mapGl.current.getCenter().lng.toFixed(4));\n      setLat(mapGl.current.getCenter().lat.toFixed(4));\n      setZoom(mapGl.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"mapgl\", {\n    className: \"mapGl\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapGL, \"l9HQzBSxQRcAzGbtJt1IVSUBYVg=\");\n\n_c = MapGL;\nexport default MapGL;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapGL\");","map":{"version":3,"sources":["C:/Users/ashke/Documents/Projects/03_reserve_field_with_map/use-mapbox-gl-js-with-react/src/MapGL.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapGL","fields","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","mapGl","isHomePage","Array","isArray","current","Map","container","style","center","coordinates","map","field","Marker","setLngLat","addTo","on","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst MapGL = ({fields}) => {\r\n\r\n    const mapContainer = useRef(null)\r\n    const [lng, setLng] = useState(34.7838)\r\n    const [lat, setLat] = useState(32.0711)\r\n    const [zoom, setZoom] = useState(12.10)\r\n    const mapGl = useRef(null)\r\n    const isHomePage = false\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(fields)) {\r\n            isHomePage = true\r\n        } else {\r\n            isHomePage = false\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        if (mapGl.current) return; // initialize map only once\r\n        // this is overly complicated! Loads diffrent maps according to if \r\n        // wanting to center in a single location or in a general location\r\n        if (isHomePage) {\r\n            mapGl.current = new mapboxgl.Map({\r\n                container: mapContainer.current,\r\n                style: 'mapbox://styles/mapbox/streets-v11',\r\n                center: [lng, lat],\r\n                zoom: zoom\r\n            });\r\n        } else { \r\n            mapGl.current = new mapboxgl.Map({\r\n                container: mapContainer.current,\r\n                style: 'mapbox://styles/mapbox/streets-v11',\r\n                center: [fields.coordinates[0], fields.coordinates[1]],\r\n                zoom: zoom\r\n            })\r\n        }\r\n        if (Array.isArray(fields)) {\r\n            fields.map((field) =>\r\n                new mapboxgl.Marker().setLngLat(field.coordinates).addTo(mapGl.current)\r\n            );\r\n        } else {\r\n            new mapboxgl.Marker().setLngLat(fields.coordinates).addTo(mapGl.current)\r\n            setLng({ lng: fields.coordinates[1] })\r\n            setLat({ lat: fields.coordinates[0] })\r\n        }\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!mapGl.current) return; // wait for map to initialize\r\n        mapGl.current.on('move', () => {\r\n            setLng(mapGl.current.getCenter().lng.toFixed(4));\r\n            setLat(mapGl.current.getCenter().lat.toFixed(4));\r\n            setZoom(mapGl.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n\r\n    return ( \r\n        <mapgl className=\"mapGl\">\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </mapgl>\r\n     );\r\n}\r\n \r\nexport default MapGL;\r\n"]},"metadata":{},"sourceType":"module"}